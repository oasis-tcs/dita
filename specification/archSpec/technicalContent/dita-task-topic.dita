<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="dita_task_topic" xml:lang="en-Us">
	<title>Task topic (strict task)</title>
	<shortdesc>The strict task-document type supports the development of instructions for the
		completion of a procedure. The strict-task document type is built using the general-task
		information type combined with the strict taskbody constraint. See the reference below to
		ensure that you have the correct task document type when you update to DITA 1.3 from DITA
		1.0 or DITA 1.1 </shortdesc>
	<conbody>
		<section id="section_60F00B0ECB0B4D69AA641E9710B1AA60">
			<title>The purpose of the standard task information type</title>
			<p id="p_D5ED1C1C9BB841FDB6488701D3C86FCF">Tasks are the essential building blocks to
				provide procedural information. A task information type answers the "How do I?"
				question by providing precise step-by-step instructions detailing the requirements
				that must be fulfilled, the actions that must be performed, and the order in which
				the actions must be performed. The <xmlelement>task</xmlelement> topic includes
				sections for describing the context, prerequisites, expected results, and other
				aspects of a task. </p>
		</section>
		<section id="section_709331EA92CE484FBEC8274342823932">
			<title>The structure of the <xmlelement>task</xmlelement> topic</title>
			<p id="p_14C0AF0152D04AC8A70306B49E22D705">The <xmlelement>task</xmlelement> element is
				the top-level element for the strict task topic. The strict task document type
				contains a <xmlelement>title</xmlelement> and a <xmlelement>taskbody</xmlelement>
				with optional alternative titles (<xmlelement>titlealts</xmlelement>), a short
				description or <xmlelement>abstract</xmlelement>, a <xmlelement>prolog</xmlelement>,
				and <xmlelement>related-links</xmlelement>. </p>
			<p id="p_9286DB98E2CD47D0A53B40DFB0049E0C">The <xmlelement>taskbody</xmlelement> element
				is the main body element inside a strict task document type. The strict task body
				has a constrained structure, with these optional elements in the following order: </p>
			<dl>
				<dlentry>
					<dt><xmlelement>prereq</xmlelement>
					</dt>
					<dd>Describes information that the user needs to know or do before starting the
						immediate task. This section <ph>can</ph> occur only once. </dd>
				</dlentry>
				<dlentry>
					<dt><xmlelement>context</xmlelement>
					</dt>
					<dd>Provides background information for the task. This information helps the
						users understand the purpose of the task and what they will gain by
						completing the task correctly. This section should be brief and does not
						replace or recreate a concept topic on the same subject, although the
						context section <ph>might</ph> include some conceptual information. This
						section <ph>can</ph> occur only once. </dd>
				</dlentry>
				<dlentry>
					<dt><xmlelement>steps</xmlelement>
					</dt>
					<dd>Provides the main content of the task topic. A <xmlelement>task</xmlelement>
						consists of a series of steps that accomplish the task. The
							<xmlelement>steps</xmlelement> element must have one or more
							<xmlelement>step</xmlelement> elements, which provide the specifics
						about each step in the task. The <xmlelement>steps</xmlelement> element
							<ph>can</ph> occur only once. <p id="p_510ED5C99C6A4A38958D579C3E8ABBC2"
							>The <xmlelement>step</xmlelement> element represents an action that a
							user must follow to accomplish a task. Each
								<xmlelement>step</xmlelement> in a <xmlelement>task</xmlelement>
							must contain a command <xmlelement>cmd</xmlelement> element which
							describes the particular action the user must perform to accomplish the
							overall task. The <xmlelement>step</xmlelement> element <ph>can</ph>
							also contain information <xmlelement>info</xmlelement>, substeps
								<xmlelement>substeps</xmlelement>, tutorial information
								<xmlelement>tutorialinfo</xmlelement>, a step example
								<xmlelement>stepxmp</xmlelement>, choices
								<xmlelement>choices</xmlelement>, a step result
								<xmlelement>stepresult</xmlelement><ph>, or troubleshooting
									<xmlelement>steptroubleshooting</xmlelement></ph>, although
							these are optional. </p>
					</dd>
				</dlentry>
				<dlentry>
					<dt><xmlelement>steps-unordered</xmlelement>
					</dt>
					<dd>Provides alternative content for the <xmlelement>task</xmlelement> topic,
						allowing for a single step in a procedure or a set of commands that need not
						be performed in a specific order. </dd>
				</dlentry>
				<dlentry>
					<dt><xmlelement>result</xmlelement>
					</dt>
					<dd>Describes the expected outcome for the task as a whole. </dd>
				</dlentry>
				<dlentry rev="errata-01">
					<dt><xmlelement>tasktroubleshooting</xmlelement></dt>
					<dd>Describes actions that a user might take if the task does not produce the
						expected results.</dd>
				</dlentry>
				<dlentry>
					<dt><xmlelement>example</xmlelement>
					</dt>
					<dd>Provides an example that illustrates or supports the task. </dd>
				</dlentry>
				<dlentry>
					<dt><xmlelement>postreq</xmlelement>
					</dt>
					<dd>Describes steps or tasks that the user should do after the successful
						completion of the current task. It is often supported by links to the next
						task or tasks in the <xmlelement>related-links</xmlelement> section. </dd>
				</dlentry>
			</dl>
		</section>
		<example id="example_FED73E89CAC4497D8AC70B96F247C79F" otherprops="examples">Here is an example of
			a task topic:
			<codeblock>&lt;task id="birdhousebuilding"&gt;
    &lt;title&gt;Building a bird house&lt;/title&gt;
    &lt;shortdesc&gt;Building a birdhouse is a perfect activity 
    for adults to share with their children or grandchildren. 
    It can be used to teach about birds, as well as the proper use of tools.
    &lt;/shortdesc&gt;
 &lt;taskbody&gt;
  <ph rev="errata-02">&lt;prereq&gt;To build a sound birdhouse, you will need a complete set of tools:
  &lt;ul&gt;&lt;li&gt;hand saw&lt;/li&gt;
      &lt;li&gt;hammer ... &lt;/li&gt;
  &lt;/ul&gt;&lt;/prereq&gt;
  &lt;context&gt;Birdhouses provide safe locations for birds to build nests and raise their young. They also provide shelter during cold and rainy spells.&lt;/context&gt;</ph>
 &lt;steps&gt;
   &lt;step&gt;&lt;cmd&gt;Lay out the dimensions for the birdhouse elements.&lt;/cmd&gt;&lt;/step&gt;
   &lt;step&gt;&lt;cmd&gt;Cut the elements to size.&lt;/cmd&gt;&lt;/step&gt;
   &lt;step&gt;&lt;cmd&gt;Drill a 1 1/2" diameter hole for the bird entrance on the front.&lt;/cmd&gt;
         &lt;info&gt;You need to look at the drawing for the correct placement of the 
               hole.&lt;/info&gt;&lt;/step&gt;
   &lt;!--...--&gt;
  &lt;/steps&gt;
  &lt;result&gt;You now have a beautiful new birdhouse!&lt;/result&gt;
  &lt;postreq&gt;Now find a good place to mount it.&lt;/postreq&gt;
 &lt;/taskbody&gt;
&lt;/task&gt;</codeblock>
		</example>
		<section id="section_5D9B27D18233424697CB9520A79126D0">
			<title>Maintaining specializations using the strict task model</title>
			<p id="p_E1DCE778C2C643D2881255B33FCD9055">Organizations that have created
				specializations based on the DITA 1.0 and 1.1 strict task model <ph>can</ph> review
				the recommendations in <xref href="../../non-normative/migration-1.1-to-1.2.dita"/>
				<ph>for information about how</ph> to maintain their specializations. </p>
		</section>
		<!--<section id="section_A5353AF30F324A64AB125FFF88B7E3D4"><title>Modules</title><p id="p_F14827B364F5411DB2F33DAF5278DE0A">The following DITA modules are provided for the task topic. </p><sl><sli><filepath>task.mod</filepath>, <filepath>task.ent</filepath>, <filepath>strictTaskbodyConstraint.mod</filepath> (DTD) </sli><sli><filepath>taskMod.xsd</filepath>, <filepath>taskGrp.xsd</filepath>, <filepath>strictTaskbodyConstraintMod.xsd</filepath> (Schema) </sli><sli rev="DITA1.3 proposal-13112"><filepath>taskMod.rng</filepath>, <filepath>strictTaskbodyConstraint.rng</filepath> (RELAX NG XML syntax) </sli><sli rev="DITA1.3 proposal-13112"><filepath>taskMod.rnc</filepath>, <filepath>strictTaskbodyConstraint.rnc</filepath> (RELAX NG compact syntax) </sli></sl></section>-->
	</conbody>
</concept>
