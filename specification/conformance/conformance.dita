<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<concept id="conformance" xml:lang="en-us">
  <title>Conformance</title>
  <shortdesc>An implementation is a conforming implementation of DITA if the implementation meets
the conditions in Section X.1. A document is a conforming DITA document if the document meets the
conditions in Section X.2.</shortdesc>
  <conbody>
<p>Conformance to the DITA specification allows documents and document types that are used with
different processors to produce the same or similar results with little or no reimplementation or
modification. Conformance also allows DITA specializations to work with any conforming DITA
application, with at least the same level of support available to unspecialized documents.</p>
    <section id="implementations">
<title>X.1 Conformance of DITA implementations</title>
<p>The DITA specification defines several core features, as summarized in the following list. Any
implementation that supports a feature <term outputclass="RFC-2119">MUST</term> conform to all rules
laid out in the section that describes the feature.</p>
<draft-comment author="robander">It's quite possible the two keyref items should be combined. Left
separate just because I could envision applications that support keys, but not keyscope.<p>Also
possible the pulling/pushing of conref items should be combined. But I can more easily envision a
distinction here - an editor that renders content references inline cannot know all instances of all
topics that would <i>push</i> content into the same topic.</p></draft-comment>
<ol>
<li>Specialization-based processing, as described in X.</li>
<li>Resolving links to elements in DITA documents, as described in section X.</li>
<li>Resolving <xmlatt>keyref</xmlatt> attributes to a key defined in a map, as described in section
X.</li>
<li>Resolving <xmlatt>keyref</xmlatt> attributes across key scopes, as described in section X.</li>
<li>Pulling content references, as described in section X and X.</li>
<li>Pushing content references, as described in section X.</li>
<li>Resolving conditional processing based on DITAVAL documents, as described in section X.</li>
<li>Resolving branch filtering markup, as described in section X.</li>
<li>Resolving <xmlatt>chunk</xmlatt> attributes, as described in section X.</li>
</ol>
<draft-comment author="robander">The section about rendering should be removed if we do not actually
end up with any base DITA 2.0 elements with normative rendering expectations.</draft-comment>
<p>In addition, several base DITA elements provide normative rules regarding how to render those
elements. Applications that render these elements <term outputclass="RFC-2119">MUST</term> support
some way to render these elements as described.</p>
<ol>
<li><xmlelement>element</xmlelement>, as described in X</li>
<li><xmlelement>element</xmlelement>, as described in X</li>
<li><xmlelement>element</xmlelement>, as described in X</li>
</ol>
<p>Conforming DITA implementations <term outputclass="RFC-2119">SHOULD</term> include a conformance
statement that gives the version of the DITA specification that is supported, indicate if all
features from the list above are supported, and indicate that all normative rendering rules are
supported.</p>
<p>If only a subset of features is supported, implementations <term outputclass="RFC-2119"
>SHOULD</term> indicate which features are (or are not) supported. If an implementation supports
rendering DITA elements but does not render all elements as described above, that application <term
outputclass="RFC-2119">SHOULD</term> indicate which elements are (or are not) supported.</p>
<p>Not all DITA features are relevant for all implementations. For example, a DITA editor that does
not render content references in context does not need to conform to rules regarding the
<xmlatt>conref</xmlatt> attribute. However, any application that renders content references <term
outputclass="RFC-2119">MUST</term> conform to rules in Section <i>X.X Content references</i>.</p>
<p>Implementations that support only a subset of DITA features are considered conforming as long as
all supported features follow the requirements that are given in the DITA specification. An
implementation that does not support a particular feature <term outputclass="RFC-2119">MUST</term>
be prepared to interoperate with other implementations that do support the feature.</p>
</section>
    <section id="documents">
<title>X.2 Conformance of DITA documents</title>
<p>A document conforms with the DITA standard if it meets all of the following conditions.</p>
<ol>
<li>A DITA document that refers to document type shells distributed by OASIS <term
outputclass="RFC-2119">MUST</term> be valid according to both the grammar files and any assertions
provided in the language reference.</li>
<li>If a DITA document refers to a custom document type shell, that shell <term
outputclass="RFC-2119">MUST</term> also conform to the rules laid out in <xref
href="http://example.com" format="html" scope="external">X.X.X.X Rules for document-type
shells</xref>.</li>
<li>If a DITA document's custom document type shell includes constraints, that shell <term
outputclass="RFC-2119">MUST</term> also conform to the rules laid out in <xref
href="http://example.com" format="html" scope="external">X.X.X.X Constraint rules</xref></li>
<li>If a DITA document uses specialized elements or attributes, those elements or attributes <term
outputclass="RFC-2119">MUST</term> also conform to the rules laid out in <xref
href="http://example.com" format="html" scope="external">X.X.X Specialization rules for element
types</xref>, <xref href="http://example.com" format="html" scope="external">X.X.X Specialization
rules for attributes</xref>, and <xref href="http://example.com" format="html" scope="external"
>X.X.X Class attribute rules and syntax</xref>.</li>
</ol>
</section>
  </conbody>
</concept>
