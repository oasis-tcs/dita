<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="theconactionattribute" xml:lang="en-us">
<title>The <xmlatt>conaction</xmlatt> attribute</title>
<shortdesc>The <xmlatt>conaction</xmlatt> attribute allows users to push content from one topic into
    another. It causes the <xmlatt>conref</xmlatt> attribute to work in reverse, so that the content
    is pushed from the current topic into another, rather than pulled from another topic into the
    current one. Allowable values for <xmlatt>conaction</xmlatt> are: pushafter, pushbefore,
    pushreplace, mark, and -dita-use-conref-target.</shortdesc>
<refbody>
<section id="section-1"><note>In the descriptions below, the word <i>target</i> always refers to the element referenced by a
          <xmlatt>conref</xmlatt> attribute.</note><p>There are three possible functions using the <xmlatt>conaction</xmlatt> attribute: replacing an
        element, pushing content before an element, and pushing content after an element. The
          <xmlatt>conaction</xmlatt> attribute always declares the desired function while the
          <xmlatt>conref</xmlatt> attribute provides the target of the reference using the standard
          <xmlatt>conref</xmlatt> syntax.</p><p>In each case, an element pushed using <xmlatt>conref</xmlatt> must be of the same type as, or
        more specialized than, its target. If the pushed element is more specialized than the
        target, then it should be generalized when the <xmlatt>conref</xmlatt> is resolved. This
        ensures that the content will be valid in the target topic.</p><ul>
<li>It is valid to push using <xmlatt>conref</xmlatt> when the two elements involved are of the same
          type. For example, a <xmlelement>step</xmlelement> element <ph 
            >can</ph> use the conref push feature with another <xmlelement>step</xmlelement> as the
          target of the <xmlatt>conref</xmlatt>.</li>
<li>The target element <ph >can</ph> be more general than the source. For
          example, it is legal to push a <xmlelement>step</xmlelement> element to replace a general
          list item (<xmlelement>li</xmlelement>); the <xmlelement>step</xmlelement> element should
          be generalized back to a list item during the process.</li>
<li>It is not possible to push a more general element into a specialized context. For example, it is
          not legal to push a list item (<xmlelement>li</xmlelement>) in order to replace a
            <xmlelement>step</xmlelement>, because the list item allows many items that are not
          valid in the specialized context.</li>
</ul></section>
<section id="replacing-content">
      <title>Replacing content in another topic</title>
      <p>When the <xmlatt>conaction</xmlatt> attribute is set to "pushreplace", the source element
        will replace the target specified on the <xmlatt>conref</xmlatt> attribute. The pushed
        content remains in the source topic where it was originally authored.</p>
      <p>For example, assume that a task in <filepath>example.dita</filepath> has the id "example",
        and contains a <xmlelement>step</xmlelement> with the id "b":
        <codeblock>&lt;task id="example" xml:lang="en">
  &lt;title>Example topic&lt;/title>
  &lt;taskbody>
    &lt;steps>
      &lt;step id="a">&lt;cmd>A&lt;/cmd>&lt;/step>
      &lt;step id="b">&lt;cmd>B&lt;/cmd>&lt;/step>
      &lt;step id="c">&lt;cmd>C&lt;/cmd>&lt;/step>
    &lt;/steps>
  &lt;/taskbody>
&lt;/task></codeblock></p>
      <p>In order to replace the step with id="b", another topic must combine a
          <xmlatt>conaction</xmlatt> value of "pushreplace" with a <xmlatt>conref</xmlatt> attribute
        that references this
        <xmlelement>step</xmlelement>:<codeblock>&lt;task id="other" xml:lang="en">
  ...
   &lt;step conaction="pushreplace" 
         conref="example.dita#example/b">
     &lt;cmd>Updated B&lt;/cmd>
   &lt;/step>
  ...
&lt;/task></codeblock></p>
      <p>The result will be an updated version of <filepath>example.dita</filepath> which contains
        the pushed
        <xmlelement>step</xmlelement>:<codeblock>&lt;task id="example" xml:lang="en">
  &lt;title>Example topic&lt;/title>
  &lt;taskbody>
    &lt;steps>
      &lt;step id="a">&lt;cmd>A&lt;/cmd>&lt;/step>
      &lt;step id="b">&lt;cmd>Updated B&lt;/cmd>&lt;/step>
      &lt;step id="c">&lt;cmd>C&lt;/cmd>&lt;/step>
    &lt;/steps>
  &lt;/taskbody>
&lt;/task></codeblock></p>
      <p>When resolving a conref push action, attributes are resolved using the same precedence as
        for normal <xmlatt>conref</xmlatt>, with one exception. Attributes on the element with the
          <xmlatt>conref</xmlatt> attribute (in this case, the source doing the push) will take
        priority over those on the referenced element. The exception is that if the source element
        does not specify an ID, the ID on the referenced element remains; if the source element does
        specify an ID then that replaces the ID on the referenced element.</p>
      <p>It is an error for two source topics to replace the same element. Applications <term
          outputclass="RFC-2119">MAY</term> warn users if more than one element
        attempts to replace a single target.</p>
    </section>
<section id="pushing-content">
      <title>Pushing content before or after another element</title>
      <p>Setting the <xmlatt>conaction</xmlatt> attribute to "pushbefore" allows an element to be
        pushed before the element referenced by the <xmlatt>conref</xmlatt> attribute. Likewise,
        setting the <xmlatt>conaction</xmlatt> attribute to "pushafter" allows an element to be
        pushed after the element referenced by the <xmlatt>conref</xmlatt> attribute. Multiple
        sources <ph >can</ph> push content before or after the same target; the
        order in which that content is pushed is undefined. </p>
      <p>When an element is pushed before or after a target, the resulting document will have at
        least two of that element. Because this is not always valid, a document attempting to push
        content before or after a target must take an extra step to ensure that the result will be
        valid. The extra step makes use of the <codeph>conaction="mark"</codeph> value.</p>
      <p>When pushing before, the <xmlatt>conref</xmlatt> attribute itself looks just as it did when
        replacing, but the <xmlatt>conaction</xmlatt> attribute is set to "mark" because it is
        marking the target element. This element remains empty; its purpose is to ensure that it is
        legal to have more than one of the current element. Immediately before the element which
        marks the target, you will place the content that you actually want to push. This element
        will set the <xmlatt>conaction</xmlatt> attribute to "pushbefore".</p>
      <p>When pushing after, the procedure is the same, except that the order of the elements is
        reversed. The element with <codeph>conaction="pushafter"</codeph> comes immediately after
        the element which marks the target.</p>
      <p>Attributes on the element which is pushed (the one with
          <codeph>conaction="pushbefore"</codeph>) must be retained on the target, apart from the
          <xmlatt>conaction</xmlatt> attribute itself. If this causes the result document to end up
        with duplicate IDs, an application can recover by dropping the duplicate ID, modifying it to
        ensure uniqueness, or warning the user.</p>
      <p>The following restrictions apply when pushing content before or after an element: <ul>
          <li>The elements that use <codeph>conaction="mark"</codeph> and
              <codeph>conaction="pushbefore"</codeph>
            <ph >are</ph> the same type as each other and appear in sequence.
            This restriction prevents a topic from trying to push a <xmlelement>body</xmlelement>
            element before or after another <xmlelement>body</xmlelement> element, because it is not
            valid to have two body elements in sequence.</li>
          <li><ph >Either</ph> the container elements of the source and target
            match, or the container of the source element <ph >is</ph> be a
            specialization of the target's container. This is also to ensure validity of the target;
            for example, while it is possible to include multiple titles in a
              <xmlelement>section</xmlelement>, it is not possible to do so in a figure. Comparing
            the parents prevents a second <xmlelement>section</xmlelement> title from being pushed
            before a figure title (the resulting figure would not be valid DITA). This restriction
            only applies to the pushbefore or pushafter actions, not to the pushreplace action.</li>
        </ul></p>
      <p>When content is pushed from one topic to another, it is still rendered in the original
        context. Processors might delete the empty element that has the
          <codeph>conaction="mark"</codeph> attribute. In order to push content from a topic without
        actually rendering that topic on its own, the topic should be referenced from the map with
        the <xmlatt>processing-role</xmlatt> attribute set to "resource-only".</p>
    </section>
<example id="example-pushbefore" otherprops="examples">
      <title>Example: pushing an element before the target</title>
      <p>The following example pushes a <xmlelement>step</xmlelement> before "b" in the
          <filepath>example.dita</filepath> file shown above.
        <codeblock>&lt;step conaction="pushbefore">&lt;cmd>Do this before B&lt;/cmd>&lt;/step>
<ph >&lt;step conaction="mark" conref="example.dita#example/b">
  &lt;cmd/>
&lt;/step></ph></codeblock></p>
      <p>The result contains the pushed <xmlelement>step</xmlelement> element before
        "b".<codeblock>&lt;task id="example" xml:lang="en">
  &lt;title>Example topic&lt;/title>
  &lt;taskbody>
    &lt;steps>
      &lt;step id="a">&lt;cmd>A&lt;/cmd>&lt;/step>
      &lt;step>&lt;cmd>Do this before B&lt;/cmd>&lt;/step>
      &lt;step id="b">&lt;cmd>B&lt;/cmd>&lt;/step>
      &lt;step id="c">&lt;cmd>C&lt;/cmd>&lt;/step>
    &lt;/steps>
  &lt;/taskbody>
&lt;/task></codeblock></p>
    </example>
<example id="example-pushafter" otherprops="examples">
      <title>Example: pushing an element after the target</title>
      <p>Pushing an element after a target is exactly the same as pushing before, except that the
        order of the "mark" element and the pushed element are
        reversed.<codeblock><ph >&lt;step conaction="mark" conref="example.dita#example/b">
  &lt;cmd/>
&lt;/step></ph>
&lt;step conaction="pushafter">&lt;cmd>Do this AFTER B&lt;/cmd>&lt;/step>
</codeblock></p>
      <p>In this case the resulting document has the pushed content after
          <xmlelement>step</xmlelement>
        b:<codeblock>&lt;task id="example" xml:lang="en">
  &lt;title>Example topic&lt;/title>
  &lt;taskbody>
    &lt;steps>
      &lt;step id="a">&lt;cmd>A&lt;/cmd>&lt;/step>
      &lt;step id="b">&lt;cmd>B&lt;/cmd>&lt;/step>
      &lt;step>&lt;cmd>Do this AFTER B&lt;/cmd>&lt;/step>
      &lt;step id="c">&lt;cmd>C&lt;/cmd>&lt;/step>
    &lt;/steps>
  &lt;/taskbody>
&lt;/task></codeblock></p>
    </example>
<section id="combining-conref-actions">
      <title>Combining <xmlatt>conaction</xmlatt> with <xmlatt>conkeyref</xmlatt> or
          <xmlatt>conrefend</xmlatt></title>
      <!--The following were added in response to spec comment
asking how conkeyref and conrefend interact with conaction; the situation
was not addressed in the original proposal.-->
      <p>The <xmlatt>conkeyref</xmlatt> attribute <ph >can</ph> be used as an
        indirect way to specify a <xmlatt>conref</xmlatt> target. If the <xmlatt>conkeyref</xmlatt>
        attribute is specified on an element that also uses the <xmlatt>conaction</xmlatt>
        attribute, the <xmlatt>conkeyref</xmlatt> attribute is used to determine the target of the
        conref push (as it would normally be used to determine the target of
        <xmlatt>conref</xmlatt>).</p>
      <p>The conref push function does not provide the ability to push a range of elements, so it is
        an error to specify the <xmlatt>conrefend</xmlatt> attribute together with the
          <xmlatt>conaction</xmlatt> attribute. If the two are specified together an application can
        recover by warning the user, ignoring the <xmlatt>conrefend</xmlatt> attribute, or with some
        other implementation strategy.</p>
    </section>
</refbody>
</reference>

