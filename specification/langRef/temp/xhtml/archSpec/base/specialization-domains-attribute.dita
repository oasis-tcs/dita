<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Git\dita\specification\langRef\temp\xhtml\archSpec\base?><?workdir-uri file:/C:/Git/dita/specification/langRef/temp/xhtml/archSpec/base/?><?path2project ..\..\xhtml\?><?path2project-uri ../../xhtml/?><?path2rootmap-uri ../../langRef/?><?doctype-public -//OASIS//DTD DITA Concept//EN?><?doctype-system concept.dtd?><concept xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" id="domainsatt" xml:lang="en-us" ditaarch:DITAArchVersion="1.3" domains="(topic concept)                            (topic abbrev-d)                            a(props deliveryTarget)                            (topic equation-d)                            (topic hazard-d)                            (topic hi-d)                            (topic indexing-d)                            (topic markup-d)                            (topic mathml-d)                            (topic pr-d)                            (topic relmgmt-d)                            (topic sw-d)                            (topic svg-d)                            (topic ui-d)                            (topic ut-d)                            (topic markup-d xml-d)   " class="- topic/topic concept/concept " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="concept:1;4:43">
<title class="- topic/title " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="title:1;5:8"><xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:1;5:16">domains</xmlatt> attribute rules and syntax</title>
<shortdesc class="- topic/shortdesc " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="shortdesc:1;6:13">The <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:2;6:25">domains</xmlatt> attribute enables processors to
    determine whether two elements or two documents use compatible domains. The attribute is
    declared on the root element for each topic or map type. Each structural, domain, and constraint
    module defines its ancestry as a parenthesized sequence of space-separated module names; the
    effective value of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:3;10:36">domains</xmlatt> attribute is composed of these parenthesized
    sequences.</shortdesc>
<conbody class="- topic/body  concept/conbody " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="conbody:1;12:10">
    <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:1;13:8">Document type shells collect the values that are provided by each module to construct the
      effective value of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:4;14:38">domains</xmlatt> attribute. Processors can examine the
      collected values when content from one document is used in another, in order to determine
      whether the content is compatible.</p>
    <p otherprops="examples" class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:2;17:30">For example, when an author pastes content from one topic into another
      topic within an XML editor, the application can use the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:5;18:71">domains</xmlatt> attribute to
      determine if the two topics use compatible domains. If not, copied content from the first
      topic might need to be generalized before it can be placed in the other topic. </p>
    <p otherprops="examples" class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:3;21:30">The <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:6;21:42">domains</xmlatt> attribute serves the same function when an
      element uses the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:7;22:32">conref</xmlatt> attribute to reference a more specialized version of
      the element. For example, a <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlelement:1;23:47">note</xmlelement> element in a concept topic conrefs a
        <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlelement:2;24:21">hazardstatement</xmlelement> element in a reference document. If the hazard
      statement domain is not available in the concept topic, the
        <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlelement:3;26:21">hazardstatement</xmlelement> element is generalized to a
        <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlelement:4;27:21">note</xmlelement> element when the content reference is resolved.</p>
    <section id="syntax" class="- topic/section " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="section:1;28:26">
      <title class="- topic/title " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="title:2;29:14">Syntax and rules</title>
      
      <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:4;31:10">Each domain and constraint module <term outputclass="RFC-2119" class="- topic/term " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="term:1;32:12">MUST</term> provide a value for use by the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:8;32:63">domains</xmlatt> attribute. Each
        structural vocabulary module <term outputclass="RFC-2119" class="- topic/term " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="term:2;33:67">SHOULD</term>
        provide a value for use by the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:9;34:48">domains</xmlatt> attribute, and it <term outputclass="RFC-2119" class="- topic/term " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="term:3;35:34">MUST</term> do so when it has a dependency on
        elements from any module that is not part of its specialization ancestry.</p>
      <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:5;37:11">Values provided for the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:10;37:43">domains</xmlatt> attribute values are
        specified from root module (map or topic) to the provided module.</p>
      <dl class="- topic/dl " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dl:1;39:11">
        <dlentry id="structural-modules" class="- topic/dlentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dlentry:1;40:42">
          <dt class="- topic/dt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dt:1;41:15">structural modules</dt>
          <dd class="- topic/dd " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dd:1;42:15">
            <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:6;43:16">The value of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:11;43:41">domains</xmlatt> attribute includes each module in the
              specialization ancestry:</p>
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeblock:1;45:24"> '(', <varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:1;45:39">topic-or-map</varname>, (' ', <varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:2;45:78">module</varname>)+, ')'</codeblock>
            <p otherprops="examples" class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:7;46:38">For example, consider the <xmlelement class="+ topic/keyword markup-d/markupname xml-d/xmlelement " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlelement:5;46:76">glossentry</xmlelement>
              specialization, in which the topic type is specialized to the concept type, and the
              concept type is specialized to glossentry. The structural module contribution to the
              value of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:12;49:36">domains</xmlatt> attribute for the glossentry structural module
              is <codeph class="+ topic/ph pr-d/codeph " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeph:1;50:26">(topic concept glossentry)</codeph>.</p>
          </dd>
        </dlentry>
        <dlentry id="structural-modules-with-dependencies" class="- topic/dlentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dlentry:2;53:61">
          <dt class="- topic/dt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dt:2;54:15">structural modules with dependencies</dt>
          <dd class="- topic/dd " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dd:2;55:15">
            <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:8;56:16">Structural modules can directly reference or specialize elements from modules that
              are outside of their specialization ancestry. They also can define specialized
              elements that reference specialized attributes. In these cases the structural module
              has a dependency on the non-ancestor module, and the structural module contribution to
              the value of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:13;60:40">domains</xmlatt> attribute <term outputclass="RFC-2119" class="- topic/term " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="term:4;61:18">MUST</term> include the names of each dependent, non-ancestor
              module.</p>
            <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:9;63:16">Dependencies are included in the value of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:14;63:70">domains</xmlatt> attribute
              following the name of the structural module with the dependency on the non-ancestor
              module. Domain or attribute modules are appended to the name of the structural module
              with the dependency on the non-ancestor module, or to previous dependencies, separated
              by "+". Dependencies on structural specialization modules are appended to the name of
              the structural module with the dependency on the non-ancestor module, or to previous
              dependencies, separated by "++". The syntax is the same as for other structural
              modules, except that added modules can include these
              dependencies:<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeblock:2;71:39"> '(', <varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:3;71:54">topic-or-map</varname>, (' ', <varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:4;71:93">module-plus-optional-dependency-list</varname>)+, ')'</codeblock></p>
            <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:10;72:16">When the structural module is included in a document-type shell, all dependency
              modules also are included along with their own <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:15;73:70">domains</xmlatt> values.</p>
            
            <p otherprops="examples" class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:11;75:38"> For example, the cppAPIRef structural module is specialized
              from reference, which is specialized from topic. The cppAPIRef module has a dependency
              on the cpp-d element domain and on the compilerTypeAtt-d attribute domain. The
              dependencies are listed after the name of <codeph class="+ topic/ph pr-d/codeph " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeph:2;78:65">cppApiref</codeph>:
              <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeblock:3;79:26">(topic reference cppApiRef+cpp-d+compilerTypeAtt-d)</codeblock></p>
            <p otherprops="examples" class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:12;80:38">Similarly, a codeChecklist structural module is specialized
              from reference, which is specialized from topic. The codeChecklist module has a
              dependency on the pr-d domain and on the task structural specialization. Again, the
              dependencies are listed after the name of <codeph class="+ topic/ph pr-d/codeph " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeph:3;83:65">codeChecklist</codeph>. The pr-d
              domain and the task module each contribute their own values, so taken together these
              modules contribute the following values:
              <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeblock:4;86:26">(topic reference codeChecklist+pr-d++task) (topic pr-d) (topic task)</codeblock></p>
          </dd>
        </dlentry>
        <dlentry id="element-domains" class="- topic/dlentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dlentry:3;89:39">
          <dt class="- topic/dt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dt:3;90:15">element domains</dt>
          <dd class="- topic/dd " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dd:3;91:15">
            <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:13;92:16">The value includes the structural type ancestry and, if applicable, the domain module
              ancestry from which the domain is specialized:</p>
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeblock:5;94:24"> '(', <varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:5;94:39">topic-or-map</varname>, (' ', <varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:6;94:78">domain-module</varname>)+, ')'</codeblock>
          </dd>
          <dd otherprops="examples" class="- topic/dd " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dd:4;96:37">For example, the highlighting domain (specialized from topic)
            supplies the following value: <codeph class="+ topic/ph pr-d/codeph " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeph:4;97:51">(topic hi-d)</codeph>. A CPP domain that is
            specialized from the programming domain, which in turn is specialized from topic,
            supplies the following value: <codeph class="+ topic/ph pr-d/codeph " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeph:5;99:51">(topic pr-d cpp-d)</codeph>.</dd>
        </dlentry>
        <dlentry id="structural-constraint-modules" class="- topic/dlentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dlentry:4;101:53">
          <dt class="- topic/dt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dt:4;102:15">structural constraint modules</dt>
          <dd class="- topic/dd " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dd:5;103:15">
            <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:14;104:16">The value includes the structural type ancestry followed by the name of the
              constraint domain:</p>
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeblock:6;106:24"> '(', <varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:7;106:39">inheritance-hierarchy</varname> <varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:8;106:80">qualifier</varname><varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:9;106:108">Tagname</varname>-c, ')'</codeblock>
            <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:15;107:16">where:</p>
            <ul class="- topic/ul " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="ul:1;108:17">
              <li id="inheritance-hierarchy-li" class="- topic/li " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="li:1;109:49"><varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:10;109:58">inheritance-hierarchy</varname> is the
                specialization hierarchy, for example, <codeph class="+ topic/ph pr-d/codeph " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeph:6;110:64">topic task</codeph>.</li>
              <li id="qualifier-li" class="- topic/li " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="li:2;111:37"><varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:11;111:46">qualifier</varname> is a string that is specific to the
                constraints module and characterizes it, for example, "strict" or "requiredTitle" or
                "myCompany-".</li>
              <li id="Tagname-li" class="- topic/li " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="li:3;114:35"><varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:12;114:44">Tagname</varname> is the element type name with an
                initial capital, for example, "Taskbody"<ph class="- topic/ph " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="ph:1;115:62"> or
                "Topic"</ph>.</li>
              <li id="literal-c-li" class="- topic/li " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="li:4;117:37">The literal "-c" indicates that the name is the name of a
                constraint.</li>
            </ul>
            <p otherprops="examples" class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:16;120:38">For example, the strictTaskbody constraint applies to the task
              module, which is specialized from topic, resulting in the following value:
                <codeph class="+ topic/ph pr-d/codeph " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeph:7;122:25">(topic task strictTaskbody-c)</codeph>. </p>
            <p id="indicating-strong-constraint" class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:17;123:51">Optionally, a domains
              contribution can indicate a strong constraint by preceding the domains contribution
              with the letter "s". For example, <codeph class="+ topic/ph pr-d/codeph " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeph:8;125:57">s(topic task strictTaskbody-c)</codeph>
              indicates a strong constraint.</p>
          </dd>
        </dlentry>
        <dlentry id="domain-constraint-modules" class="- topic/dlentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dlentry:5;129:49">
          <dt class="- topic/dt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dt:5;130:15">domain constraint modules</dt>
          <dd class="- topic/dd " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dd:6;131:15">
            <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:18;132:16">The value includes the specialization ancestry followed by the name of the constraint
              domain:</p>
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeblock:7;134:24"> '(', <varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:13;134:39">inheritance-hierachy</varname> <varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:14;134:79">qualifier</varname><varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:15;134:107">domain</varname>Domain-c ')'</codeblock>
            <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:19;135:16">where:</p>
            <ul class="- topic/ul " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="ul:2;136:17">
              <li class="- topic/li " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="li:5;137:19"><varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:16;137:28">inheritance-hierarchy</varname> is the specialization hierarchy, for
                example, <codeph class="+ topic/ph pr-d/codeph " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeph:9;138:34">topic hi-d</codeph>.</li>
              <li class="- topic/li " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="li:6;139:19"><varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:17;139:28">qualifier</varname> is a string that is specific to the constraints
                module and characterizes it, for example, "noSyntaxDiagram" or "myCompany-".</li>
              <li class="- topic/li " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="li:7;141:19"><varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:18;141:28">domain</varname> is the name of the domain to which the constraints
                apply, for example, "Highlighting" or "Programming".</li>
              <li class="- topic/li " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="li:8;143:19">The literal "-c" indicates that the name is the name of a constraint.</li>
            </ul>
            <p otherprops="examples" class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:20;145:39">For example, a domain constraint module that
              restricts the highlighting domain includes a value like the following: <codeph class="+ topic/ph pr-d/codeph " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeph:10;146:94">(topic
                hi-d basic-HighlightingDomain-c)</codeph></p>
          </dd>
        </dlentry>
        <dlentry id="attribute-domains" class="- topic/dlentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dlentry:6;150:41">
          <dt class="- topic/dt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dt:6;151:15">attribute domains</dt>
          <dd class="- topic/dd " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="dd:7;152:15">
            <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:21;153:16">The value uses an "a" before the initial parenthesis to indicate an attribute domain.
              Within the parenthesis, the value includes the attribute specialization hierarchy,
              starting with <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:16;155:37">props</xmlatt> or <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:17;155:63">base</xmlatt>:</p>
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeblock:8;156:24"> 'a(', <varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:19;156:40">props-or-base</varname>, (' ', <varname class="+ topic/keyword sw-d/varname " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="varname:20;156:80">attname</varname>)+, ')'</codeblock>
            <p otherprops="examples" class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:22;157:38">For example, the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:18;157:63">mySelectAttribute</xmlatt> specialized
              from <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:19;158:28">props</xmlatt> results in the following value: <codeph class="+ topic/ph pr-d/codeph " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeph:11;158:83">a(props
                mySelectAttribute)</codeph></p>
          </dd>
        </dlentry>
      </dl>
    </section>
<example id="example" otherprops="examples" class="- topic/example " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="example:1;164:45">
      <title class="- topic/title " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="title:3;165:14">Example: Task with multiple domains</title>
      <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:23;166:10">In this example, a document-type shell integrates the task structural module and the
        following domain modules:</p>
      <simpletable frame="all" relcolwidth="1.0* 1.0*" class="- topic/simpletable " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="simpletable:1;168:56">
        <sthead class="- topic/sthead " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="sthead:1;169:17">
          <stentry class="- topic/stentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="stentry:1;170:20">Domain</stentry>
          <stentry class="- topic/stentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="stentry:2;171:20">Domain short name</stentry>
        </sthead>
        <strow class="- topic/strow " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="strow:1;173:16">
          <stentry class="- topic/stentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="stentry:3;174:20">User interface</stentry>
          <stentry class="- topic/stentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="stentry:4;175:20">ui-d</stentry>
        </strow>
        <strow class="- topic/strow " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="strow:2;177:16">
          <stentry class="- topic/stentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="stentry:5;178:20">Software</stentry>
          <stentry class="- topic/stentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="stentry:6;179:20">sw-d</stentry>
        </strow>
        <strow class="- topic/strow " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="strow:3;181:16">
          <stentry class="- topic/stentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="stentry:7;182:20">Programming</stentry>
          <stentry class="- topic/stentry " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="stentry:8;183:20">pr-d</stentry>
        </strow>
      </simpletable>
      <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:24;186:10">The value of the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:20;186:35">domains</xmlatt> attribute includes one value from each module;
        the effective value is the following:</p>
      <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeblock:9;188:18">domains="(topic task) (topic ui-d) (topic sw-d) (topic pr-d)"</codeblock>
      <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:25;189:10">If the document-type shell also used a specialization of the programming domain that
        describes C++ programming (with a short name of "cpp-d"), the new C++ programming domain
        would add an additional value to the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:21;191:54">domains</xmlatt> attribute:</p>
      <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="codeblock:10;192:18">domains="(topic task) (topic ui-d) (topic sw-d) (topic pr-d) <b class="+ topic/ph hi-d/b " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="b:1;192:82">(topic pr-d cpp-d)</b>"</codeblock>
      <p class="- topic/p " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="p:26;193:10">Note that the value for the <xmlatt class="+ topic/keyword markup-d/markupname xml-d/xmlatt " xtrf="file:/C:/Git/dita/specification/archSpec/base/specialization-domains-attribute.dita" xtrc="xmlatt:22;193:46">domains</xmlatt> attribute is not authored; Instead,
        the value is defaulted based on the modules that are included in the document type
        shell.</p>
    </example>
    
    
</conbody>
</concept>