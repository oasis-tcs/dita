<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="video">
  <title><xmlelement>video</xmlelement></title>
  <shortdesc>The <xmlelement>video</xmlelement> element is used to reference video content in a DITA
    topic. It is modeled roughly on the HTML5 element of the same name.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>video</indexterm>
        <indexterm>multimedia domain<indexterm>video </indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section id="usage-information">
      <title>Usage information</title>
      <p>Media can be referenced either using the <xmlatt>data</xmlatt> or
          <xmlatt>datakeyref</xmlatt> attributes or using nested
          <xmlelement>media-source</xmlelement> elements. Extensive configuration of the
        presentation of the media can be configured using optional nested elements.</p>
    </section>
    <section id="formatting-expectations">
      <title>Formatting expectations</title>
      <p>When possible, the video should be displayed at the location of the
          <xmlelement>video</xmlelement> reference. If <xmlatt>width</xmlatt> and/or
          <xmlatt>height</xmlatt> are specified, those dimensions should be honored. When the media
        cannot be presented in a meaningful way, the contents of the
          <xmlelement>fallback</xmlelement> element, if any, should be presented.</p>
    </section>
    <section id="processing-expectations">
      <title>Processing expectations</title>
      <p>When converting to HTML5 or HTML5-derived output formats, <xmlelement>video</xmlelement>
        should be mapped to its HTML5-equivalent markup. Processing for other output formats is
        highly dependent on the capabilities of those formats. Implementers should implement support
        for presentation of multimedia on a best-effort basis.</p>
    </section>
    <section id="specialization-hierarchy">
      <title>Specialization hierarchy</title>
      <p>+ topic/object media-d/video </p>
    </section>
    <section id="attributes">
      <title>Attributes</title>
      <p>The following attributes are available on this element: <xref keyref="attributes-universal"
        /> and the attributes defined below.</p>
      <dl>
        <dlentry>
          <dt><xmlatt>data</xmlatt></dt>
          <dd>Contains the absolute or relative URI of the video media. If this attribute is
            specified, <xmlatt>type</xmlatt> should also be specified. If the video is available in
            multiple formats, nested <xmlelement>media-source</xmlelement> elements should be used
            instead.</dd>
        </dlentry>
        <dlentry>
          <dt><xmlatt>datakeyref</xmlatt></dt>
          <dd>Key reference to the location of the video data, as for <xmlatt>data</xmlatt>. When
            specified and the key is resolvable, the key-provided URI is used. A key that has no
            associated resource, only link text, is considered to be unresolved for the purpose of
            the <xmlatt>datakeyref</xmlatt> attribute. If <xmlatt>data</xmlatt> is specified, it is
            used as a fallback when the key cannot be resolved to a resource.</dd>
        </dlentry>
        <dlentry>
          <dt><xmlatt>type</xmlatt></dt>
          <dd>Indicates the content type (MIME type) for the data specified by the
              <xmlatt>data</xmlatt>
            <ph>or <xmlatt>datakeyref</xmlatt>
            </ph> attribute. This attribute should be set when the <xmlatt>data</xmlatt> attribute
            is set to avoid loading unsupported content types. Note that this differs from the
              <xmlatt>type</xmlatt> attribute on many other DITA elements in that it specifies a
            MIME type rather than a content type. <ph>If <xmlatt>type</xmlatt> is not specified, the
              effective type value for the key named by the <xmlatt>datakeyref</xmlatt> attribute is
              used as the this attribute's value.</ph></dd>
        </dlentry>
        <dlentry>
          <dt><xmlatt>height</xmlatt></dt>
          <dd>Indicates the vertical dimension for the resulting video display. If necessary, the
            object is scaled to the specified size. <ph id="height-width-units">The value of this
              attribute is a real number (expressed in decimal notation) optionally followed by a
              unit of measure from the set of pc, pt, px, in, cm, mm, em (picas, points, pixels,
              inches, centimeters, millimeters, and ems respectively). The default unit is px
              (pixels). Possible values include: "5", "5in", and "10.5cm".</ph> If a height value is
            specified and no width value is specified, the width will be scaled by the same factor
            as the height. <ph id="height-width-warning">If both a height value and width value are
              specified, implementations <term outputclass="RFC-2119">MAY</term> ignore one of the
              two values when they are unable to scale to each direction using different
              factors.</ph></dd>
        </dlentry>
        <dlentry>
          <dt><xmlatt>width</xmlatt></dt>
          <dd>Indicates the horizontal dimension for the resulting video display. If necessary, the
            object is scaled to the specified size. <ph>If both a height value and width value are
              specified, implementations <term outputclass="RFC-2119">MAY</term> ignore one of the
              two values when they are unable to scale to each direction using different
              factors.</ph> If a width value is specified and no height value is specified, the
            height will be scaled by the same factor as the width. <ph>If both a height value and
              width value are specified, implementations <term outputclass="RFC-2119">MAY</term>
              ignore one of the two values when they are unable to scale to each direction using
              different factors.</ph></dd>
        </dlentry>
        <dlentry>
          <dt><xmlatt>tabindex</xmlatt></dt>
          <dd>Position the video in tabbing order.</dd>
        </dlentry>
      </dl>
    </section>
    <example otherprops="examples">
      <title>A very simple video reference</title>
      <codeblock>&lt;video data="video.mp4" type="video/mp4"/></codeblock>
      <p>A similar example using a key reference:</p>
      <codeblock>&lt;video datakeyref="video" type="video/mp4"/></codeblock>
    </example>
    <example>
      <title>Referencing a video in multiple formats</title>
      <codeblock>&lt;video>
  &lt;media-source keyref="video-mp4" value="video.mp4" type="video/mp4"/>
  &lt;media-source keyref="video-ogg" value="video.ogg" type="video/ogg"/>
  &lt;media-source keyref="video-webm" value="video.webm" type="video/webm"/>
&lt;/video></codeblock>
    </example>
    <example>
      <title>Complete example configuring video presentation, with multiple formats and
        multi-lingual subtitles</title>
      <p>The following video reference explicitly defines multiple presentational details for a
        video available in multiple formats, referenced using key references, with URIs when the
        keys are not resolvable.</p>
      <codeblock>&lt;video width="400px" height="300px">
  &lt;desc>A video illustrating this procedure.&lt;/desc>
  &lt;fallback>
    &lt;image keyref="video-not-available" href="video-not-available.png">
      &lt;alt>This video cannot be displayed.&lt;/alt>
    &lt;/image>
  &lt;/fallback>
  
  &lt;!-- Reference the poster via both key and URI -->
  &lt;video-poster keyref="video-poster" value="poster.png"/>

  &lt;!--
    The default value is 'true', so @value is optional on these controls
    when enabling their features, but mandatory when disabling them.
  -->
  &lt;media-controls value="true"/>
  &lt;media-autoplay/>
  &lt;media-loop value="false"/>
  &lt;media-muted value="false"/>

  &lt;!-- Multiple formats, referenced via both key and URI -->
  &lt;media-source keyref="video-mp4" value="video.mp4" type="video/mp4"/>
  &lt;media-source keyref="video-ogg" value="video.ogg" type="video/ogg"/>
  &lt;media-source keyref="video-webm" value="video.webm" type="video/webm"/>

  &lt;!-- Subtitle tracks in multiple languages -->
  &lt;media-track xml:lang="en" keyref="video-subtitles-en"
    value="video-subtitles-en.vtt" type="subitles"/>
  &lt;media-track xml:lang="fr" keyref="video-subtitles-fr"
    value="video-subtitles-fr.vtt" type="subitles"/>
  &lt;media-track xml:lang="de" keyref="video-subtitles-de"
    value="video-subtitles-de.vtt" type="subitles"/>
&lt;/video></codeblock>
    </example>
  </refbody>
</reference>
