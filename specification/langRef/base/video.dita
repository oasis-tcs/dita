<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="video">
  <title><xmlelement>video</xmlelement></title>
  <shortdesc conkeyref="reuse-video/shortdesc"/>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>multimedia
          elements<indexterm><xmlelement>video</xmlelement></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section conkeyref="reuse-video/usage-information"
      id="usage-information"><title/><p/></section>
    <section conkeyref="reuse-video/rendering-expectations"
      id="rendering-expectations"><title/><p/></section>
    <section conkeyref="reuse-video/attributes" id="attributes"/>
    <example otherprops="examples" id="example">
      <title>Examples</title>
      <p>This section contains examples of how the <xmlelement>video</xmlelement> element
        can be used.</p>
      <fig id="fig_amp_v4z_4hb">
        <title>Example of a <xmlelement>video</xmlelement> element that
          uses direct addressing</title>
        <p>In the following code sample, a video resource is referenced using direct addressing. The
            <xmlatt>format</xmlatt> attribute specifies the MIME type of the video. </p>
        <codeblock>&lt;video href="video.mp4" format="video/mp4"/></codeblock>
      </fig>
      <fig id="fig_bls_gg3_knb">
        <title>Example of a <xmlelement>video</xmlelement> element that
          uses indirect addressing</title>
        <p>In the following code sample, the video resource is addressed using a key reference:</p>
        <codeblock>&lt;video keyref="video"/></codeblock>
        <p rev="review-a">The URI and the MIME type do not need to be
          specified on the <xmlelement>video</xmlelement> element, since
          they are specified on the key definition:</p>
        <codeblock>&lt;keydef keys="video" href="video.mp4" format="video/mp4"/></codeblock>
      </fig>
      <fig id="video-with-multiple-formats">
        <title>Example of a <xmlelement>video</xmlelement> element with
          multiple formats</title>
        <p>In the following code sample,
            <xmlelement>media-source</xmlelement> elements are used to
          specify the different video formats that are available.</p>
        <codeblock>&lt;video>
  &lt;media-source href="video.mp4" format="video/mp4"/>
  &lt;media-source href="video.ogg" format="video/ogg"/>
  &lt;media-source href="video.webm" format="video/webm"/>
&lt;/video></codeblock>
      </fig>
      <fig id="alternate-and-fallback">
        <title>Example of a <xmlelement>video</xmlelement> element with multiple formats and
          multilingual subtitles</title>
        <p>The following code sample defines multiple presentational details for a video that is
          available in multiple formats. The video is referenced using key reference and a fallback
          image is provided for use when the video cannot be displayed.</p>
        <codeblock>&lt;video height="300px"
                loop="false"
                muted="false"
                width="400px">
  &lt;desc>A video illustrating this procedure.&lt;/desc>
  &lt;fallback>
    &lt;image href="video-not-available.png">
      &lt;alt>This video cannot be displayed.&lt;/alt>
    &lt;/image>
  &lt;/fallback>
  &lt;video-poster keyref="demo1-video-poster"/>
  &lt;!-- Multiple formats, referenced via key. The key definition 
       specifies both the URI and the MIME type -->
  &lt;media-source keyref="demo1-video-mp4"/>
  &lt;media-source keyref="demo1-video-ogg"/>
  &lt;media-source keyref="demo1-video-webm"/>
  &lt;!-- Subtitle tracks in English, French and German.
       Each key definition provides a URI and sets type="subtitles". -->
  &lt;media-track srclang="en" keyref="demo1-video-subtitles-en"/>
  &lt;media-track srclang="fr" keyref="demo1-video-subtitles-fr"/>
  &lt;media-track srclang="de" keyref="demo1-video-subtitles-de"/>
&lt;/video></codeblock>
      </fig>
    </example>
  </refbody>
</reference>
