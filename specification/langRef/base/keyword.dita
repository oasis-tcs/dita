<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="keyword" xml:lang="en-us">
<title><xmlelement>keyword</xmlelement></title>
<shortdesc>The <xmlelement>keyword</xmlelement> element identifies
a keyword or token, such as a single value from an enumerated list,
the name of a command or parameter, product name, or a lookup key
for a message.</shortdesc>
<prolog><metadata>
<keywords><indexterm>elements<indexterm>body<indexterm><xmlelement>keyword</xmlelement></indexterm></indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section id="section-1"><p>A keyword contains any text that has a unique or key-like value, such as a product name. Where
there is an element that has a better meaning for what you are describing, use that element. The
<xmlelement>keyword</xmlelement> element is a generic element; use it when no other element applies.
The <xmlelement>keyword</xmlelement> element can also be used to contain reusable text.</p>
<!--<p>With DITA 1.2, another option for reusable text is the <xref href="text.dita"/> element, which is designed to be free of any extra semantic information. The <xmlelement>text</xmlelement> element is available within <xmlelement>keyword</xmlelement>, and at least one of those elements should be available to allow content reuse in any context.</p>--><p>Specific markup recommendations:<ul>
<li>Use <xmlelement>apiname</xmlelement> for API names and <xmlelement>cmdname</xmlelement> for
command names.</li>
<li>Use <xref href="term.dita"><xmlelement>term</xmlelement></xref> to indicate what you are
defining with inline paragraph definitions.</li>
<li>Use <xref href="ph.dita"><xmlelement>ph</xmlelement></xref> for general phrases when
<xmlelement>keyword</xmlelement> is not appropriate.</li>
<li>Use <xmlelement>kwd</xmlelement> to indicate programming keywords in syntax diagrams and syntax
phrases.</li>
</ul></p><p>Specialized elements derived from <xmlelement>keyword</xmlelement>
            <ph >might</ph> also have extended processing, such as different
            formatting or automatic indexing. </p><p>All <xmlelement>keyword</xmlelement> or <xmlelement>indexterm</xmlelement> elements in the
               <xmlelement>keywords</xmlelement> metadata element are considered part of the topic's
            metadata and should be processed as appropriate for the given output medium.</p>
         <p>While the <xmlelement>keyword</xmlelement> element can be used inline, the <xref
               href="keywords.dita"><xmlelement>keywords</xmlelement></xref> element is not an
            inline element. The <xmlelement>keywords</xmlelement> element only appears in the
               <xmlelement>topicmeta</xmlelement> or <xmlelement>prolog</xmlelement> elements; it is
            used to specify keywords that apply to the topic.</p></section>
<section conref="../../common/commonNavLibraryTable.dita#contentmodel-keyword/contains" id="contains" otherprops="contains"></section>
<section id="inheritance" otherprops="inheritance"><title>Inheritance</title><p>-
topic/keyword </p></section>
<example id="example" otherprops="examples"><codeblock xml:space="preserve">&lt;p&gt;The &lt;keyword&gt;assert&lt;/keyword&gt; pragma statement allows messages to be passed
to the emulator, pre-compiler, etc..&lt;/p&gt;
&lt;p>The &lt;keyword id="myProduct">AmazingProduct&lt;/keyword> can make use of
this feature to do really neat stuff.&lt;/p></codeblock></example>
<section id="attributes"><title>Attributes</title>
      <p conref="../../common/conref-attribute.dita#conref-attribute/universal-outputclass-keyref"/>
   </section>
</refbody>
</reference>

